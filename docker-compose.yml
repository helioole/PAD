services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    depends_on:
      - sports-service
      - user-service
    environment:
      - SPORTS_SERVICE_URL=http://sports-service:5001
      - USER_SERVICE_URL=http://user-service:5002
    networks:
      - app-network

  sports-service:
    build:
      context: ./sports-service
      dockerfile: Dockerfile
    ports:
      - "5001"
    expose:
      - "50051"
    depends_on:
      - mongo
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

      resources:
        limits:
          memory: 512M


  user-service:
    build:
      context: ./user-service
    volumes:
      - ./user-service:/app
    command: python app.py
    # command: pytest tests/user_service_test.py --maxfail=1 --disable-warnings -v
    expose:
      - "5002:5002"
    depends_on:
      - mongo
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  websocket-service:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - redis
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mongo:
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    networks:
      - app-network

  redis:
    image: redis:6.0
    ports:
      - "6379:6379"
    networks:
      - app-network

  user-service-tests:
    build:
      context: ./user-service
    command: pytest --maxfail=1 --disable-warnings -v
    depends_on:
      - user-service
networks:
  app-network:
    driver: bridge